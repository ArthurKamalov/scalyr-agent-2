name: Build agent packages.

on:
  workflow_call:
    inputs:
      image-type:
        description: "Name of the image build type."
        required: true
        type: string
      python-version:
        required: false
        type: string
        default: 3.8.10

    secrets:
      SCALYR_PROD_CLOUDTECH_TESTING_WRITE_TOKEN:
        required: true
      SCALYR_CLOUDTECH_TESTING_DEV_SCALYR_READ_API_KEY:
        required: true

env:
  DOCKER_BUILDKIT: 1


jobs:
  # TODO move here tests from the CicleCi.
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install python.
        uses: actions/setup-python@v2
        with:
          python-version: ${{ inputs.python-version }}

      - name: Perform the deployment of the test environment.
        uses: ./.github/actions/perform-deployment
        with:
          deployment-name: "dev_environment"

      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:qemu-v6.1.0
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          driver-opts: network=host

      - name: Start minikube for the test of the kubernetes build.
        if: inputs.image-type == 'k8s'
        shell: bash
        run: |
          minikube start

#      - name: Run image test.
#        env:
#            SCALYR_API_KEY: ${{ secrets.SCALYR_PROD_CLOUDTECH_TESTING_WRITE_TOKEN }}
#        run: |
#          python3 tests/package_tests/run_package_test.py run-package-test ${{ inputs.image-type}}_test

      - name: Run docker smoke tests
        env:
          SCALYR_API_KEY: ${{ secrets.SCALYR_PROD_CLOUDTECH_TESTING_WRITE_TOKEN }}
          READ_API_KEY: ${{ secrets.SCALYR_CLOUDTECH_TESTING_DEV_SCALYR_READ_API_KEY }}
          CIRCLE_BUILD_NUM: ${{ github.run_number }}${{ github.run_attempt }}
          SCALYR_SERVER: "agent.scalyr.com"

        run: |
          if [[ "${{ inputs.image-type}}" == "k8s" ]]; then
            source ./.circleci/smoketest_k8s.sh scalyr/scalyr-agent-ci-unittest:4 400 no_delete_existing_k8s_objs
          else
            source ./.circleci/smoketest_docker.sh scalyr/scalyr-agent-ci-unittest:4 ${{ inputs.image-type}} 400
          fi


  publish:
    needs: [test]
    name: Publish image.
    if: ${{ github.ref == 'refs/heads/master' }}
    runs-on: ubuntu-latest

    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:qemu-v6.1.0
          platforms: all

      - name: Push image from master branch commit hash.
        if: ${{ github.ref == 'refs/heads/master' }}
        run: |

          python3 build_package_new.py ${{ inputs.image-type }} \
            --push \
            --registry \
            localhost:5000 \
            --tag ${{ github.sha }}