name: 'Prepare environment'
description: |
  Prepares current machine by running set of the 'deployers', which are defined in the 'agent_build/environment_deployers.deployers.py.' folder.
  For more info, please look at the docs in the same file.
inputs:
  names:
    description: 'Names of the deployers.'
    required: true
  base-docker-image:
    description: "Name of the base docker image. If specified, then the deployer will be executed inside this image."
    required: false

runs:
  using: "composite"
  steps:
    - name: Get checksum of the deployer and its base deployer (if exists).
      id: deployer-info
      shell: bash
      run: |
          names="${{ inputs.names }}"
          if [[ $names != *, ]]; then
            names="$names,"
          fi
          current_deployer_name=$(cut -d "," -f -1 <<< $names)
          other_deployer_names=$(cut -d "," -f 2- <<< $names)
          echo "::set-output name=checksum::$(python3 agent_build/environment_deployers/deployers.py get-info "$current_deployer_name" checksum)"
          echo "::set-output name=current-deployer-name::$current_deployer_name"
          echo "::set-output name=other-deployer-names::$other_deployer_names"

    - name: Restore cached dependensies of the environment deployer.
      uses: actions/cache@v2
      env:
        cache-version: v1
      with:
        path: ~/dependencies_cache
        key: deployer-${{ steps.deployer-info.outputs.current-deployer-name }}-${{ inputs.base-docker-image }}-${{ runner.os }}-${{ env.cache-version }}-${{ steps.deployer-info.outputs.checksum }}

    - name: Prepare build environment.
      shell: bash
      run: |
        echo "FFF"
        echo "${{ steps.deployer-info.outputs.other-deployer-names }}"
        echo "${{ steps.deployer-info.outputs.current-deployer-name }}"
        python3 agent_build/environment_deployers/deployers.py deploy ${{ steps.deployer-info.outputs.current-deployer-name }} --base-docker-image  "${{ inputs.base-docker-image }}" --cache-dir ~/dependencies_cache

        # in some cases, the 'deploy' command also generates file 'paths.txt'. This file contains paths
        # to binaries of all tools that are needed for the build. Use this file to add those paths to the PATH env.
        # variable to be able to use those tools.
        if [ -f ~/dependencies_cache/paths.txt ]; then
          cat ~/dependencies_cache/paths.txt >> $GITHUB_PATH
        fi

        echo "RRRR"
        echo "${{ steps.deployer-info.outputs.other-deployer-names }}"
        ## Remove checksum file, it is not needed anymore.
        #rm checksum.txt

    - name: Run base deployer if specified.
      if: steps.deployer-info.outputs.other-deployer-names
      uses: ./.github/actions/run-environment-deployer
      with:
        names: ${{ steps.deployer-info.outputs.other-deployer-names }}
        base-docker-image: ${{ inputs.base-docker-image }}