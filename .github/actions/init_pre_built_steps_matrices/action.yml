name: "Init pre-build steps job matrices"
description: "This action accepts matrices for the jobs that are used in the agent-build workflow and excludes job that are must not be executed in mon-master runs."


runs:
  using: "composite"
  steps:
    - name: Get all used steps cache keys
      id: get_all_used_steps_cache_keys
      shell: bash
      run: |
        echo "cache_keys_json=$(python3 agent_build_refactored/cicd/get_prebuilt_steps_runners.py all-cache-keys)" >> $GITHUB_OUTPUT

    - name: Get missing step caches matrices
      id: get_missing_caches_matrices
      uses: ./.github/actions/get_steps_missing_caches
      with:
        caches_keys_json: ${{ steps.get_all_used_steps_cache_keys.outputs.cache_keys_json }}

    - name: 3333
      id: dddd
      shell: bash
      run: |
        echo "${{ steps.get_missing_caches_matrices.outputs.missing_cache_keys_json }}"
  
#    - name: Get job matrices.
#      id: get-job-matrices
#      shell: bash
#      env:
#        GITHUB_EVENT_NAME: ${{ github.event_name }}"
#        GITHUB_BASE_REF: ${{ github.base_ref }}
#        GITHUB_REF_TYPE: ${{ github.ref_type }}
#        GITHUB_REF_NAME: ${{ github.ref_name }}
#        GITHUB_TOKEN: ${{ inputs.github_token }}
#        DEFAULT_OS: ubuntu-20.04
#        DEFAULT_PYTHON_VERSION: 3.8.13
#      run: |
#        set -e
#
#        python3 agent_build_refactored/scripts/get_workflow_info.py > /tmp/workflow_info.json
#        IS_MASTER_RUN="$(cat /tmp/workflow_info.json | jq -c '.is_master_run')"
#        echo "is_master_run=${IS_MASTER_RUN}" >> $GITHUB_OUTPUT
#        echo "to_publish=$(cat /tmp/workflow_info.json | jq -c '.to_publish')" >> $GITHUB_OUTPUT
#        echo "is_production=$(cat /tmp/workflow_info.json | jq -c '.is_production')" >> $GITHUB_OUTPUT
#        echo "version=$(cat /tmp/workflow_info.json | jq -c '.version')" >> $GITHUB_OUTPUT
#
#        mkdir -p /tmp/matrices
#
#        cat <<EOT | python3 agent_build_refactored/scripts/filter_matrix_jobs.py --is-master-run "${IS_MASTER_RUN}" > /tmp/matrices/agent_image_build_matrix.json
#        ${{ inputs.images-to-build }}
#        EOT
#        echo "agent_image_build_matrix_json=$(cat /tmp/matrices/agent_image_build_matrix.json)" >> $GITHUB_OUTPUT
#
#        cat <<EOT | python3 agent_build_refactored/scripts/filter_matrix_jobs.py --is-master-run "${IS_MASTER_RUN}" > /tmp/matrices/agent_managed_packages_build_matrix.json
#        ${{ inputs.managed-packages-to-build }}
#        EOT
#        echo "agent_managed_packages_build_matrix_json=$(cat /tmp/matrices/agent_managed_packages_build_matrix.json)" >> $GITHUB_OUTPUT
#
#        cat <<EOT | python3 agent_build_refactored/scripts/filter_matrix_jobs.py --is-master-run "${IS_MASTER_RUN}" > /tmp/matrices/agent_managed_packages_test_matrix.json
#        ${{ inputs.managed-packages-to-test }}
#        EOT
#        echo "agent_managed_packages_test_matrix_json=$(cat /tmp/matrices/agent_managed_packages_test_matrix.json)" >> $GITHUB_OUTPUT
#
#        echo "pre_build_steps_matrix_json=$(python3 agent_build_refactored/scripts/get_steps_to_prebuilt_matrix.py --matrices_path /tmp/matrices)" >> $GITHUB_OUTPUT
#
#
#    - name: Print job matrices
#      shell: bash
#      run: |
#
#        echo -n "Is master run: "
#        echo '${{ steps.get-job-matrices.outputs.is_master_run }}' | jq --color-output
#
#        echo -n "Is to publish: "
#        echo '${{ steps.get-job-matrices.outputs.to_publish }}' | jq --color-output
#
#        echo -n "Is production: "
#        echo '${{ steps.get-job-matrices.outputs.is_production }}' | jq --color-output
#
#        echo -n "Version: "
#        echo '${{ steps.get-job-matrices.outputs.version }}' | jq --color-output
#
#        echo "Image pre-build steps job matrix: "
#        echo '${{ steps.get-job-matrices.outputs.pre_build_steps_matrix_json }}' | jq --color-output
#
#        echo "Image build job matrix: "
#        echo '${{ steps.get-job-matrices.outputs.agent_image_build_matrix_json }}' | jq --color-output
#
#        echo "Managed packages build job matrix: "
#        echo '${{ steps.get-job-matrices.outputs.agent_managed_packages_build_matrix_json }}' | jq --color-output
#
#        echo "Managed packages test job matrix: "
#        echo '${{ steps.get-job-matrices.outputs.agent_managed_packages_test_matrix_json }}' | jq --color-output
