--- setup.py	2015-09-27 22:09:38.000000000 +0200
+++ setup.py	2022-12-25 14:39:38.000000000 +0100
@@ -28,6 +28,7 @@
 Topic :: Software Development :: Libraries :: Python Modules
 """
 
+
 def howto_install_setuptools():
     print("""
    Error: You need setuptools Python package!
@@ -40,18 +41,18 @@
    Then you could make eggs from this package.
 """)
 
+
 if sys.version_info[:2] < (2, 4):
     print("ERROR: this package requires Python 2.4 or later!")
     sys.exit(1)
 
 try:
     from setuptools import setup
+
     params = {
-        'install_requires': [ 'pyasn1>=0.1.8', 'pysmi' ],
+        'install_requires': ['pyasn1>=0.1.8', 'pysmi'],
         'zip_safe': True
-        }
-    if sys.platform.lower()[:3] != 'win':
-        params['install_requires'].append('pycrypto>=2.4.1')
+    }
 
 except ImportError:
     for arg in sys.argv:
@@ -59,11 +60,10 @@
             howto_install_setuptools()
             sys.exit(1)
     from distutils.core import setup
+
     params = {}
     if sys.version_info[:2] > (2, 4):
-        params['requires'] = [ 'pyasn1(>=0.1.8)', 'pysmi' ]
-        if sys.platform.lower()[:3] != 'win':
-            params['requires'].append('pycrypto(>=2.4.1)')
+        params['requires'] = ['pyasn1(>=0.1.8)', 'pysmi']
 
 if sys.platform.lower()[:3] == 'win':
     try:
@@ -75,55 +75,55 @@
 and install into your system.
 """)
 
-doclines = [ x.strip() for x in __doc__.split('\n') if x ]
- 
-params.update( {
+doclines = [x.strip() for x in __doc__.split('\n') if x]
+
+params.update({
     'name': 'pysnmp',
-    'version': open(os.path.join('pysnmp','__init__.py')).read().split('\'')[1],
+    'version': open(os.path.join('pysnmp', '__init__.py')).read().split('\'')[1],
     'description': doclines[0],
     'long_description': ' '.join(doclines[1:]),
     'maintainer': 'Ilya Etingof <ilya@glas.net>',
     'author': 'Ilya Etingof',
     'author_email': 'ilya@glas.net',
     'url': 'http://sourceforge.net/projects/pysnmp/',
-    'classifiers': [ x for x in classifiers.split('\n') if x ],
+    'classifiers': [x for x in classifiers.split('\n') if x],
     'platforms': ['any'],
     'license': 'BSD',
-    'packages': [ 'pysnmp',
-                  'pysnmp.smi',
-                  'pysnmp.smi.mibs',
-                  'pysnmp.smi.mibs.instances',
-                  'pysnmp.carrier',
-                  'pysnmp.carrier.asynsock',
-                  'pysnmp.carrier.asynsock.dgram',
-                  'pysnmp.carrier.asyncore',
-                  'pysnmp.carrier.asyncore.dgram',
-                  'pysnmp.carrier.twisted',
-                  'pysnmp.carrier.twisted.dgram',                   
-                  'pysnmp.carrier.asyncio',
-                  'pysnmp.carrier.asyncio.dgram',                   
-                  'pysnmp.entity',
-                  'pysnmp.entity.rfc3413',
-                  'pysnmp.entity.rfc3413.oneliner',
-                  'pysnmp.hlapi',
-                  'pysnmp.hlapi.asyncio',
-                  'pysnmp.hlapi.asyncore',
-                  'pysnmp.hlapi.asyncore.sync',
-                  'pysnmp.hlapi.asyncore.sync.compat',
-                  'pysnmp.hlapi.twisted',
-                  'pysnmp.proto',
-                  'pysnmp.proto.mpmod',
-                  'pysnmp.proto.secmod',
-                  'pysnmp.proto.secmod.rfc3414',
-                  'pysnmp.proto.secmod.rfc3414.auth',
-                  'pysnmp.proto.secmod.rfc3414.priv',
-                  'pysnmp.proto.secmod.rfc3826',
-                  'pysnmp.proto.secmod.rfc3826.priv',
-                  'pysnmp.proto.secmod.eso',
-                  'pysnmp.proto.secmod.eso.priv',
-                  'pysnmp.proto.acmod',
-                  'pysnmp.proto.proxy',
-                  'pysnmp.proto.api' ]
-    } )
+    'packages': ['pysnmp',
+                 'pysnmp.smi',
+                 'pysnmp.smi.mibs',
+                 'pysnmp.smi.mibs.instances',
+                 'pysnmp.carrier',
+                 'pysnmp.carrier.asynsock',
+                 'pysnmp.carrier.asynsock.dgram',
+                 'pysnmp.carrier.asyncore',
+                 'pysnmp.carrier.asyncore.dgram',
+                 'pysnmp.carrier.twisted',
+                 'pysnmp.carrier.twisted.dgram',
+                 'pysnmp.carrier.asyncio',
+                 'pysnmp.carrier.asyncio.dgram',
+                 'pysnmp.entity',
+                 'pysnmp.entity.rfc3413',
+                 'pysnmp.entity.rfc3413.oneliner',
+                 'pysnmp.hlapi',
+                 'pysnmp.hlapi.asyncio',
+                 'pysnmp.hlapi.asyncore',
+                 'pysnmp.hlapi.asyncore.sync',
+                 'pysnmp.hlapi.asyncore.sync.compat',
+                 'pysnmp.hlapi.twisted',
+                 'pysnmp.proto',
+                 'pysnmp.proto.mpmod',
+                 'pysnmp.proto.secmod',
+                 'pysnmp.proto.secmod.rfc3414',
+                 'pysnmp.proto.secmod.rfc3414.auth',
+                 'pysnmp.proto.secmod.rfc3414.priv',
+                 'pysnmp.proto.secmod.rfc3826',
+                 'pysnmp.proto.secmod.rfc3826.priv',
+                 'pysnmp.proto.secmod.eso',
+                 'pysnmp.proto.secmod.eso.priv',
+                 'pysnmp.proto.acmod',
+                 'pysnmp.proto.proxy',
+                 'pysnmp.proto.api']
+})
 
 setup(**params)
