[tox]
envlist = lint,py{2.7}-unit-tests,coverage
skipsdist = true
# NOTE: We pass the TERM env to preserve colors
passenv = TERM XDG_CACHE_HOME

[testenv]
basepython =
    {py2.7-unit-tests,py2.7-smoke-tests,py2-rpm-smoke-tests,coverage}: python2.7
    {py3.5-unit-tests,py3.5-smoke-tests}: python3.5
    {py3.6-unit-tests,py3.6-smoke-tests,py3-rpm-smoke-tests,lint,black,modernize,flake8,pylint,mypy}: python3.6
    {py3.7-unit-tests,py3.7-smoke-tests}: python3.7
    {py3.8-unit-tests,py3.8-smoke-tests}: python3.8
install_command = pip install -U --force-reinstall {opts} {packages}
deps =
    -r dev-requirements.txt
whitelist_externals =
    rm
    bash
commands =
    py.test scalyr_agent/tests/unit_tests -vv --durations=5

# NOTE: Older version of tox which still supports Python 2.6 doesn't support installing
# requirements from a file so we need to declare them inline
# In addition to that, we need to use older versions of some of the libraries
# (importlib, pytest, etc.)
# We can get rid of this once we drop Python 2.6 support.
[testenv:py2.6-unit-tests]
basepython = python2.6
install_command = pip install -U --force-reinstall {opts} {packages}
deps = -rpy26-unit-tests-requirements.txt
commands =
    py.test -vv --durations=5

# Lint target which runs all the linting tools such as black, modernize, pylint, flake8, mypy, etc.
# NOTE: We use bash -c since we don't want tox to quote all the arguments, we want globs to
# be expaded
[testenv:lint]
deps =
    -r dev-requirements.txt
    -r lint-requirements.txt
commands =
    bash -c 'black --check --config pyproject.toml *.py scripts/*.py scalyr_agent/'
    python .circleci/modernize/modernize.py -j 2
    bash -c 'flake8 --config lint-configs/python/.flake8 *.py scripts/*.py  scalyr_agent/'
    bash -c 'pylint -E --rcfile=./lint-configs/python/.pylintrc *.py scripts/*.py scalyr_agent/'
    bash -c 'mypy --pretty --no-incremental --config-file ./lint-configs/python/mypy.ini *.py scripts/*.py scalyr_agent/'

[testenv:black]
deps =
    -r dev-requirements.txt
    -r lint-requirements.txt
commands =
    bash -c 'black --check --config pyproject.toml *.py scripts/*.py scalyr_agent/'

[testenv:modernize]
deps =
    -r dev-requirements.txt
    -r lint-requirements.txt
commands =
    python .circleci/modernize/modernize.py -j 2

[testenv:flake8]
deps =
    -r dev-requirements.txt
    -r lint-requirements.txt
commands =
    bash -c 'flake8 --config lint-configs/python/.flake8 *.py scripts/*.py  scalyr_agent/'

[testenv:pylint]
deps =
    -r dev-requirements.txt
    -r lint-requirements.txt
commands =
    bash -c 'pylint -E --rcfile=./lint-configs/python/.pylintrc *.py scripts/*.py scalyr_agent/'

[testenv:mypy]
deps =
    -r dev-requirements.txt
    -r lint-requirements.txt
commands =
    bash -c 'mypy --pretty --no-incremental --config-file ./lint-configs/python/mypy.ini *.py scripts/*.py scalyr_agent/'

# TODO: Once we make more progress, set coverage % threshold and fail a build if it's not reached
[testenv:coverage]
commands =
    rm -f .coverage
    py.test --cov=scalyr_agent/ --cov=tests/

[testenv:py2.6-smoke-tests]
passenv =
    SCALYR_API_KEY READ_API_KEY SCALYR_SERVER AGENT_HOST_NAME
commands =
    py.test scalyr_agent/tests/smoke_tests/standalone_smoke_test.py -vv --durations=5 --config config.ini

[testenv:py2.7-smoke-tests]
passenv =
    SCALYR_API_KEY READ_API_KEY SCALYR_SERVER AGENT_HOST_NAME
commands =
    py.test scalyr_agent/tests/smoke_tests/standalone_smoke_test.py -vv --durations=5 --config config.ini

[testenv:py3.5-smoke-tests]
passenv =
    SCALYR_API_KEY READ_API_KEY SCALYR_SERVER AGENT_HOST_NAME
commands =
    py.test scalyr_agent/tests/smoke_tests/standalone_smoke_test.py -vv --durations=5 --config config.ini

[testenv:py3.6-smoke-tests]
passenv =
    SCALYR_API_KEY READ_API_KEY SCALYR_SERVER AGENT_HOST_NAME
commands =
    py.test scalyr_agent/tests/smoke_tests/standalone_smoke_test.py -vv --durations=5 --config config.ini

[testenv:py3.7-smoke-tests]
passenv =
    SCALYR_API_KEY READ_API_KEY SCALYR_SERVER AGENT_HOST_NAME
commands =
    py.test scalyr_agent/tests/smoke_tests/standalone_smoke_test.py -vv --durations=5 --config config.ini

[testenv:py3.8-smoke-tests]
passenv =
    SCALYR_API_KEY READ_API_KEY SCALYR_SERVER AGENT_HOST_NAME
commands =
    py.test scalyr_agent/tests/smoke_tests/standalone_smoke_test.py -vv --durations=5 --config config.ini

[testenv:py3-rpm-smoke-tests]
passenv =
    SCALYR_API_KEY READ_API_KEY SCALYR_SERVER AGENT_HOST_NAME DOCKER_CERT_PATH DOCKER_HOST DOCKER_TLS_VERIFY
commands =
    #python -m scalyr_agent.tests.smoke_tests.tools.package.distribution_package_builder.build_image {posargs}
    #python -m scalyr_agent.tests.smoke_tests.tools.package.rpm.build_image {posargs}
    py.test scalyr_agent/tests/smoke_tests/rpm_smoke_test.py -vv --durations=5 --config config.ini --package-python-version python3

[testenv:py2-rpm-smoke-tests]
passenv =
    SCALYR_API_KEY READ_API_KEY SCALYR_SERVER AGENT_HOST_NAME DOCKER_CERT_PATH DOCKER_HOST DOCKER_TLS_VERIFY
commands =
    #python -m scalyr_agent.tests.smoke_tests.tools.package.distribution_package_builder.build_image {posargs}
    #python -m scalyr_agent.tests.smoke_tests.tools.package.rpm.build_image {posargs}
    py.test scalyr_agent/tests/smoke_tests/rpm_smoke_test.py -vv --durations=5 --config config.ini --package-python-version python2