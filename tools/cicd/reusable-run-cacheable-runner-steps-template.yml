name: Run pre-built jobs.

on:
  workflow_call:
    inputs:
      python_version:
        type: string
      aws_private_key_name:
        type: string
      aws_region:
        type: string
      aws_security_group:
        type: string
      aws_prefix_list_id:
        type: string
      aws_objects_name_prefix:
        type: string
      cache_version_suffix:
        type: string

    secrets:
      CT_AWS_DEV_EC2_PRIVATE_KEY:
        required: true
      CT_AWS_DEV_EC2_ACCESS_KEY:
        required: true
      CT_AWS_DEV_EC2_SECRET_KEY:
        required: true
      CT_SCALYR_TOKEN_PROD_US_CLOUDTECH_TESTING_WRITE:
        required: true
      CT_SCALYR_TOKEN_PROD_US_CLOUDTECH_TESTING_READ:
        required: true

permissions:
  contents: read

jobs:
  pre_job:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Prepare dev requirements.
        uses: ./.github/actions/prepare_python_with_dev_requirements
        with:
          python_version: ${{ inputs.python_version }}

      - name: Get npm cache directory
        id: npm-cache-dir
        shell: bash
        run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}

      - uses: actions/cache@v3
        id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

      - name: Install the restore_steps_caches action dependencies
        working-directory: .github/actions/restore_steps_caches
        run: |
          npm install
          
          ls -al
          
          ls node_modules/.bin -al

      - name: Check that the workflow files are up to date
        run: |
          python3 tools/cicd/cacheable_runner_steps_helper.py update-files
          
          set +e
          git diff --exit-code
          EXIT_CODE=$?
          set -e
          
          if [ $EXIT_CODE -ne 0 ]; then
            echo -e "Files of the workflow are not up-to-date, please run the command 'python3 tools/cicd/cacheable_runner_steps_helper.py update-files' and commit required changes."
            exit 1
          fi

      - name: Get all steps ids
        id: get_all_steps_ids
        run: |
          echo "all_steps_ids_json=$(python3  tools/cicd/cacheable_runner_steps_helper.py get-all-steps-ids)" >> $GITHUB_OUTPUT
          echo "cache_version_suffix=$(python3 tools/cicd/cacheable_runner_steps_helper.py get-cache-version-suffix)" >> $GITHUB_OUTPUT
          
          cat $GITHUB_OUTPUT

      - name: Get missing caches steps
        id: get_missing_caches_steps
        uses: ./.github/actions/restore_steps_caches
        with:
          steps_ids: ${{ steps.get_all_steps_ids.outputs.all_steps_ids_json }}
          cache_version_suffix: ${{ steps.get_all_steps_ids.outputs.cache_version_suffix }}
          cache_root: agent_build_output/step_output
          lookup_only: true

      - name: Print missing steps caches matrices
        id: print_missing_caches_matrices
        shell: bash
        run: |          
          cat <<< '${{ steps.get_missing_caches_steps.outputs.steps_ids_with_cache_hit }}' | \
            python3  tools/cicd/cacheable_runner_steps_helper.py get-missing-caches-matrices --github-step-output-file "${GITHUB_OUTPUT}"
          cat $GITHUB_OUTPUT

  stage:
    name: Level 0 ${{ matrix.name }}
    runs-on: ubuntu-20.04
    needs:
      - pre_job
    strategy:
      matrix: ${{ fromJSON(needs.pre_job.outputs.matrix0) }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Prepare dev requirements.
        uses: ./.github/actions/prepare_python_with_dev_requirements
        with:
          python_version: ${{ inputs.python_version }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f03ac48505955848960e80bbb68046aa35c7b9e7 # v2.0.0
        with:
          driver-opts: network=host

      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@e81a89b1732b9c48d79cd809d8d81d79c4647a18 # v2
        with:
          image: tonistiigi/binfmt:qemu-v6.2.0
          platforms: all

      - name: Prepare SSH
        id: prepare-ssh
        shell: bash
        run: |
          echo '${{ secrets.CT_AWS_DEV_EC2_PRIVATE_KEY }}' > /tmp/private_key.pem
          chmod 600 /tmp/private_key.pem
          eval `ssh-agent -s`

          cat "/tmp/private_key.pem" | ssh-add -
          echo "ssh_auth_sock=${SSH_AUTH_SOCK}" >> $GITHUB_OUTPUT

      - name: Cache step
        id: cache-step
        uses: actions/cache@v3
        with:
          path: |
            agent_build_output/step_output/${{ matrix.step_id }}
          key: ${{ matrix.step_id }}_${{ matrix.cache_version_suffix }}

      - name: Get required steps caches
        id: get_required_steps_caches
        uses: ./.github/actions/restore_steps_caches
        with:
          steps_ids: ${{ toJSON(matrix.required_steps) }}
          cache_version_suffix: ${{ matrix.cache_version_suffix }}
          cache_root: agent_build_output/step_output
          fail_on_cache_miss: true

      - name: Run cached step
        shell: bash
        env:
          SSH_AUTH_SOCK: ${{ steps.prepare-ssh.outputs.ssh_auth_sock }}
          AWS_ACCESS_KEY: ${{ secrets.CT_AWS_DEV_EC2_ACCESS_KEY }}
          AWS_SECRET_KEY: ${{ secrets.CT_AWS_DEV_EC2_SECRET_KEY }}
          AWS_PRIVATE_KEY_NAME: ${{ inputs.aws_private_key_name }}
          AWS_PRIVATE_KEY_PATH: "/tmp/private_key.pem"
          AWS_REGION: ${{ inputs.aws_region }}
          AWS_SECURITY_GROUP: ${{ inputs.aws_security_group }}
          AWS_SECURITY_GROUPS_PREFIX_LIST_ID: ${{ inputs.aws_prefix_list_id }}
          AWS_OBJECTS_NAME_PREFIX: ${{ inputs.aws_objects_name_prefix }}
        run: |
          python3 agent_build_refactored/scripts/runner_helper.py ${{ matrix.step_runner_fqdn }} run-cacheable-step